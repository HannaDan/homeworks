'number' + 3 + 3
//result: 'number33'
//Крок перший: 'number' + 3, результат 'number3' 
//Крок другий:  'number3' + 3, результатом буде 'number33'
//Результатом додавання string до number в js буде значення типу string (важливо, що перетворення числа на рядок відбувається в момент першої операції з рядком)

null + 3
// result: 3
//Крок перший: 0 + 3, результат 3 
//При додаванні значення null до number - null стає 0

5 && "qwerty"
//result: "qwerty"
//Крок перший: 5 перетворюється в true 
//Крок другий: "qwerty" перетворюється в true
//Крок третій: виводиться остання true, тоб то "qwerty", бо обидва true
//При операції && будь яке число (окрім 0) це true, а будь який непустий рядок це також true, в такому випадку виводимо останне true

+'40' + +'2' + "hillel";

//result: '42hillel'
//Крок перший: строка '40' перетворюється на число 40 (бо +'40')
//Крок другий: строка '2' перетворюється на число 2(бо +'2')
//Крок третій: число 40 + число 2 = 42
//Крок четвертий: число 42 + строка "hillel" стає строкою '42hillel'

'10' - 5 === 6;
//result: false
//Крок перший: строка '10' перетворюється на число 10 (бо оператор -, цей оператор виконується тільки з числами)
//Крок другий: число 10 - число 5 = 5
//Крок третій: строге порівняння 5 === 6 дає результат false


true + false
//result: 1
//Крок перший: булеве значення true стає 1 при додаванні його до булевого значення або до number
//Крок другий: булеве значення false стає 0 при додаванні його до булевого значення або до number
//Крок третій: 1+0=1

'4px' - 3
//result: ось тут не можу дати відповідь: або NaN або 1. В пісочниці (https://codepen.io/) резултьтат операції let result = '4px' - 3 видає NaN, 
//але при пошуку пояснення бачила думку, що js перетворює стрінгу з цифрою і текстом при опереції віднімання на ціле число, а текст ігнорує якщо цифра стоїть на початку стрінги

'4' - 3
//result: 1
//Крок перший: сторка '4' перетворюється на число 4 (бо оператор -, цей оператор виконується тільки з числами)
//Крок другий: 4-3 = 1

'6' + 3 ** 0;
//result: '61'
//Крок перший: ** це Exponentiation operator. Він має вищій пріоритет над оператором +, тому виконується першим. 3**0 = 1, бо №**0 завжди 1
//Крок другий: строка '6' + число 1 = строка '61'

12 / '6'
//result: 2
//Крок перший: строка '6' перетворюється на число 6, бо є операто /
//Крок другий: 12/6 = 2

'10' + (5 === 6);
//result: '10false'
//Крок перший: вираз в скобках має вищій пріоритет та дорівнює false
//Крок другий: булеве значення false стає строкою 'false', бо виконується об'єднання строк
//Крок третій: сторка '10'+ 'false' = '10false'

null == ''
//result: false
//Порівняння null з будь яким типом окрім (null, undefined) дає в результаті false

3 ** (9 / 3);
//result: 27
//Крок перший: 9/3 = 3
//Крок другий:  ** це Exponentiation operator тому 3**3 = 27

!!'false' == !!'true'
//result: true
//Крок перший: оператор !! перетворює значення на булеве. !!false дорівнює true, бо це не порожній рядок
//Крок другий: !!true дорівнює true, бо це не порожній рядок
//Крок третій: !!true дорівнює !!true


0 || '0' && 1
//result: 1
//Крок перший: оператор && має вищий пріоритет за ||, тому '0' && 1 дорівнює 1 (бо '0' та 1 обидва = true, повертаємо останне true)
//Крок другий: виконуємо 0 || 1, результат 1, бо 0 це false (повертаємо перший true)

(+null == false) < 1;
//result: false
//Крок перший: спочатку виконуємо операцію в (), (+null == false), де +null це 0 (оператор + перед null намагається перетворити null в число)
//Крок другий: (0 == false) це true, бо значення false як числа = 0 (0==0) 
//Крок трктій: маємо вираз true < 1 , де true це 1, тому 1 < 1 це false

false && true || true
//result: true
//Крок перший: спочатку виконуємо операцію &&, false && true видає false, бо повертаємо false якщо хочаб один варіант false
//Крок другий: false || true поверне true, бо повертаємо true якщо хочаб один варіант true


false && (false || true);
//result: false
//Крок перший: спочатку виконуємо операцію (false || true) поверне true
//Крок другий: false && true поверне false


(+null == false) < 1 ** 5;
//result: false
//Крок перший: спочатку виконуємо операцію (+null == false), де +null це 0 (оператор + перед null намагається перетворити null в число)
//Крок другий: виконуємо операцію 1**5, результат 1
//Крок трктій: маємо вираз true < 1 , де true це 1, тому 1 < 1 це false